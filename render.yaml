# Render Blueprint for Voice Browser Application
# This file defines the deployment configuration for both frontend and backend services

services:
  # Backend API Service (FastAPI with WebSocket support)
  - name: voice-browser-backend
    type: web
    runtime: python
    repo: https://github.com/sandeepsalwan1/browserVoice.git  # Replace with your actual repo URL
    rootDir: ./backend
    plan: starter  # Upgrade to standard or higher for production
    region: oregon
    autoDeployTrigger: commit  # Auto-deploy on commits to main branch
    buildCommand: pip install --upgrade pip && pip install -r requirements.txt && playwright install chromium --with-deps
    startCommand: uvicorn voice_browser_server:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /
    maxShutdownDelaySeconds: 60
    
    # Environment variables for the backend
    envVars:
      # OpenAI API Key - REQUIRED for voice processing
      - key: OPENAI_API_KEY
        sync: false  # Will prompt for this during deployment
      
      # Python environment settings
      - key: PYTHONUNBUFFERED
        value: "1"
      
      # Playwright browser settings
      - key: PLAYWRIGHT_BROWSERS_PATH
        value: "/opt/render/project/.playwright"
      
      # FastAPI settings
      - key: PORT
        value: "8000"
      
      # CORS settings for frontend connection
      - key: FRONTEND_URL
        fromService:
          name: voice-browser-frontend
          type: web
          property: host
    
    # Custom domains (optional - configure these in Render Dashboard)
    # domains:
    #   - api.yourdomain.com

  # Frontend Web Service (Next.js)
  - name: voice-browser-frontend
    type: web
    runtime: node
    repo: https://github.com/sandeepsalwan1/browserVoice.git  # Replace with your actual repo URL
    rootDir: ./web
    plan: starter  # Upgrade to standard or higher for production
    region: oregon
    autoDeployTrigger: commit  # Auto-deploy on commits to main branch
    buildCommand: npm ci && npm run build
    startCommand: npm start
    healthCheckPath: /
    
    # Environment variables for the frontend
    envVars:
      # Backend API URL for WebSocket connection
      # This dynamically references the backend service
      - key: NEXT_PUBLIC_WS_URL
        value: wss://voice-browser-backend.onrender.com/ws
      
      # Production optimizations
      - key: NODE_ENV
        value: production
      
      # Next.js settings
      - key: PORT
        value: "3000"
    
    # Custom domains (optional - configure these in Render Dashboard)
    # domains:
    #   - yourdomain.com
    #   - www.yourdomain.com

# Environment variable groups for shared configuration
envVarGroups:
  - name: voice-browser-shared
    envVars:
      # Shared application settings
      - key: APP_NAME
        value: "Voice Browser"
      
      - key: APP_VERSION
        value: "1.0.0"
      
      # Logging level
      - key: LOG_LEVEL
        value: "INFO"

# Preview environment settings
previews:
  generation: manual  # Change to 'automatic' for auto-generated previews on PRs
  expireAfterDays: 7  # Auto-delete preview environments after 7 days of inactivity

# Additional notes for deployment:
# 
# 1. Replace 'your-username' in repo URLs with your actual GitHub username
# 2. Set up the OPENAI_API_KEY during the initial deployment via Render Dashboard
# 3. The backend needs Playwright browsers which are installed during build
# 4. WebSocket connections require compatible instance types (starter or higher)
# 5. For production, consider upgrading to 'standard' or 'pro' plans
# 6. CORS is configured in the FastAPI app to allow frontend connections
# 7. The frontend automatically connects to the backend WebSocket endpoint
#
# Environment Variables to set manually in Render Dashboard:
# - OPENAI_API_KEY: Your OpenAI API key for LLM functionality
#
# Optional optimizations for production:
# - Enable auto-scaling with the 'scaling' field
# - Add custom domains via the 'domains' field  
# - Set up monitoring and alerts
# - Configure backup strategies for any persistent data 